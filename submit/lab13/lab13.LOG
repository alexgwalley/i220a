Script started on 2020-12-06 12:11:55-05:00 [TERM="xterm-256color" TTY="/dev/pts/0" COLUMNS="80" LINES="24"]
awalley1@remote-n17:/import/linux/home1/awalley1/i220a/submit/lab13$ vim[K[K[Kcd exercises/
awalley1@remote-n17:/import/linux/home1/awalley1/i220a/submit/lab13/exercises$ c at poll.s
		#dos starts all .com programs at this offset
		.org	0x100

	        .code16

#Define constants
DOS_INT 	=       0x21
COUNT  		=        50
QUIT   		= 	'q'
DELAY_LO 	=	0x0
DELAY_HI 	=	0x2

#Entered at program startup.
		jmp	main


#data area	
inChar:		.byte	0
hasKey:		.byte   1

main:
main1:	
		call    getchar         #read input char into inChar
		mov	inChar, %al	#al set to char read
		cmp	$QUIT, %al	#is it a QUIT character?
		jz	main3		#quit if got QUIT character
		mov     $COUNT, %cx     #set output counter
main2:
	  call    checkKey	#check if key has been pressed
		mov	hasKey, %al	#put checkKey result into al
		test	%al, %al	#non-zero if keyboard has char
			jz	main4           #no key press
			xor	%al, %al
		mov	%al, hasKey     #reset hasKey flag
		call	getchar         #read new input key
main4:	
		dec	%cx             #decrement loop counter
		mov inChar, %al
		cmp $QUIT, %al
		call    putchar         #output inChar to console
		call    delay           #delay for time proportional to DELAY
				jz main3
		jnz     main2           #loop if output counter nonzero
		jmp     main1           #back to read next char
main3:		call	exit

#Set hasKey to non-zero if key has been pressed
checkKey:
		push    %ax
		movb    $0xb, %ah       #specify fn: get stdin status
		int     $DOS_INT
		mov     %al, hasKey     #0 iff no key pressed
		pop     %ax
		ret

	

#Read next char from stdin into inChar.  Quit if ^C
getchar:
		push	%ax
		mov     $0x08,%ah       #specify fn: read without echo into al
		int     $DOS_INT        #read stdin into %al
		mov     %al,inChar      #mov char read to inChar
		pop	%ax
		ret

#Write inChar to console	
putchar:
		push	%ax
		movb    $02,%ah         #specify fn: output dl to stdout
		movb    inChar,%dl      #char to output
		int     $DOS_INT        #output inChar
		pop	%ax
		ret

exit:
		mov	$0x4c,%ah      	#specify fn: program exit
		mov	$0x0,%al        #setup exit status
		int	$DOS_INT        #exit program
	
	

#spin loop for delay time proportional to value in DELAY_HI_DELAY_LO
delay:		push	%ax
		push	%bx
		push	%cx
		mov	$DELAY_HI, %bx
delay1:		mov     $DELAY_LO, %cx
delay2:		mov     $0x0f0a0, %ax
	        imul    %cl
	        dec     %cx
	        jnz     delay2
	        dec     %bx
	        jnz	delay1
	        pop	%cx
		pop	%bx
		pop	%ax
		ret

awalley1@remote-n17:/import/linux/home1/awalley1/i220a/submit/lab13/exercises$ m ake poll.o[Kcom
make: 'poll.com' is up to date.
awalley1@remote-n17:/import/linux/home1/awalley1/i220a/submit/lab13/exercises$ m ake key-int.com
make: 'key-int.com' is up to date.
awalley1@remote-n17:/import/linux/home1/awalley1/i220a/submit/lab13/exercises$ d osbox &
[1] 4007286
awalley1@remote-n17:/import/linux/home1/awalley1/i220a/submit/lab13/exercises$ DOSBox version 0.74-2
Copyright 2002-2018 DOSBox Team, published under GNU GPL.
---
CONFIG:Loading primary settings from config file /home/awalley1/.dosbox/dosbox-0.74-2.conf
MIXER:Got different values from SDL: freq 44100, blocksize 512
ALSA:Can't subscribe to MIDI port (65:0) nor (17:0)
MIDI:Opened device:none

[1]+  Done                    dosbox
awalley1@remote-n17:/import/linux/home1/awalley1/i220a/submit/lab13/exercises$ g it branch 0l[K[K-l
[?1h=  checkout[m[m
  lab0[m[m
  lab1[m[m
  lab10[m[m
  lab11[m[m
* [32mlab13[m[m
  lab2[m[m
  lab3[m[m
  lab4[m[m
  lab5[m[m
  lab6[m[m
  lab7[m[m
  lab8[m[m
  lab9[m[m
  master[m[m
  prj1[m[m
  prj2[m[m
  prj4[m[m
  prj5[m[m
  status[m[m
[K[?1l>awalley1@remote-n17:/import/linux/home1/awalley1/i220a/submit/lab13/exercises$ e xit
exit

Script done on 2020-12-06 12:16:09-05:00 [COMMAND_EXIT_CODE="0"]
